set networks [list \
		  "0.0.0.0" \
		  "http" \
		  ]

spawn input/filtergen/t/scan

set timeout 3

foreach name $networks {
	set test "network $name"

	send "$name\r"

	expect {
		"kind = identifier, spelling = \"$name\"" { pass $test }
		timeout { fail $test }
		eof { fail "$test (eof)" }
	}
}

set test "network 127.0.0.1/255.255.255.255"
send "127.0.0.1/255.255.255.255\r"
expect {
    "kind = identifier, spelling = \"127.0.0.1\"" {
	expect {
	    "kind = slash" {
		expect {
		    "kind = identifier, spelling = \"255.255.255.255\"" { pass $test }
		    timeout { fail $test }
		    eof { fail "$test (eof)" }
		}
	    }
	    timeout { fail $test }
	    eof { fail "$test (eof)" }
	}
    }
    timeout { fail $test }
    eof { fail "$test (eof)" }
}

set test "network bar/29"
send "bar/29\r"
expect {
    "kind = identifier, spelling = \"bar\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
expect {
    "kind = slash, spelling = \"/\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
expect {
    "kind = identifier, spelling = \"29\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
pass $test

set test "network bar/255.255.255.248"
send "bar/255.255.255.248\r"
expect {
    "kind = identifier, spelling = \"bar\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
expect {
    "kind = slash, spelling = \"/\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
expect {
    "kind = identifier, spelling = \"255.255.255.248\"" {}
    timeout { fail $test }
    eof { fail "$test (eof)" }
}
pass $test